# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class Ciphertext(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Ciphertext - a model defined in OpenAPI

        random_nonce: The random_nonce of this Ciphertext.
        c1: The c1 of this Ciphertext.
        c2: The c2 of this Ciphertext.
    """

    random_nonce: str = Field(alias="random_nonce")
    c1: str = Field(alias="c1")
    c2: str = Field(alias="c2")

    @validator("random_nonce")
    def random_nonce_min_length(cls, value):
        assert len(value) >= 32
        return value

    @validator("random_nonce")
    def random_nonce_max_length(cls, value):
        assert len(value) <= 32
        return value

    @validator("c1")
    def c1_min_length(cls, value):
        assert len(value) >= 32
        return value

    @validator("c1")
    def c1_max_length(cls, value):
        assert len(value) <= 32
        return value

    @validator("c2")
    def c2_min_length(cls, value):
        assert len(value) >= 32
        return value

    @validator("c2")
    def c2_max_length(cls, value):
        assert len(value) <= 32
        return value

Ciphertext.update_forward_refs()

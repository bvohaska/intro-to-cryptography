# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.decision import Decision


class DecisionRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DecisionRequest - a model defined in OpenAPI

        password: The password of this DecisionRequest [Optional].
        decisions: The decisions of this DecisionRequest.
    """

    password: Optional[str] = Field(alias="password", default=None)
    decisions: List[Decision] = Field(alias="decisions")

    @validator("password")
    def password_min_length(cls, value):
        assert len(value) >= 32
        return value

    @validator("password")
    def password_max_length(cls, value):
        assert len(value) <= 32
        return value

DecisionRequest.update_forward_refs()
